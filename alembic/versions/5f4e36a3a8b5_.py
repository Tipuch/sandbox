"""empty message

Revision ID: 5f4e36a3a8b5
Revises: 7f67f7deeea9
Create Date: 2024-10-22 18:05:58.050489

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = "5f4e36a3a8b5"
down_revision: Union[str, None] = "7f67f7deeea9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "passkey",
        sa.Column(
            "credential_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "passkey",
        sa.Column("format", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column(
        "passkey",
        sa.Column("aaguid", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.drop_column("passkey", "attestation")
    op.add_column("passkey", sa.Column("attestation", sa.LargeBinary(), nullable=True))
    op.drop_column("passkey", "timeout")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("passkey", sa.Column("timeout", sa.INTEGER(), nullable=False))
    op.alter_column(
        "passkey",
        "attestation",
        existing_type=sa.LargeBinary(),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.drop_column("passkey", "aaguid")
    op.drop_column("passkey", "format")
    op.drop_column("passkey", "credential_type")
    # ### end Alembic commands ###
